@using SIS.Application.Features.Queries.SliderQuery.GetAll;
@using SIS.Domain.Entities;
@model GetAllSliderQueryResponse
@section HeadSection
	{
	<script src="~/assets/plugins/sweetalert/sweetalert2.all.min.js"></script>
}
<a asp-action="create" class="btn btn-primary"><i class="fas fa-plus"></i></a>
<div class="col-lg-6">
	@foreach (Slider model in Model.Sliders)
	{
		<div class="card">
			<div class="card-body">
				<div id="carouselExampleCaption" class="carousel slide" data-bs-ride="carousel">
					<div class="carousel-inner" role="listbox">
						<div class="carousel-caption d-none d-md-block">
							<h3 class="text-white">@(model.Title)</h3>
							<p>@(model.Caption)</p>
						</div>

						@for (int i = 0; i < model.Images.Count; i++)
						{
							<div class="carousel-item @(i == 0 ? "active":"")">
								<img src="~/SliderPhotos/@(model.Images[i].ImageSrc)" alt="..." class="d-block img-fluid">
							</div>
						}
					</div>
					<a class="carousel-control-prev" href="#carouselExampleCaption" role="button" data-bs-slide="prev">
						<span class="carousel-control-prev-icon" aria-hidden="true"></span>
						<span class="visually-hidden">Previous</span>
					</a>
					<a class="carousel-control-next" href="#carouselExampleCaption" role="button" data-bs-slide="next">
						<span class="carousel-control-next-icon" aria-hidden="true"></span>
						<span class="visually-hidden">Next</span>
					</a>
				</div>
			</div>
			<a asp-action="update" asp-route-id="@(model.Id)" class="btn btn-sm bg-danger-light">
				<i class="feather-edit"></i>
			</a>
			<a asp-action="delete" asp-route-id="@(model.Id)" id="deletebtn" class="btn btn-sm bg-success-light me-2">
				<i class="feather-delete"></i>
			</a>
		</div>
	}
</div>


@section BodySection
	{
	<script>
		let btns = document.querySelectorAll("#deletebtn");

		btns.forEach(x => {
			let url = x.getAttribute("href");
			x.addEventListener("click", function (e) {
				e.preventDefault();

				Swal.fire({
					title: 'Are you sure?',
					icon: 'warning',
					showCancelButton: true,
					confirmButtonColor: '#3085d6',
					cancelButtonColor: '#d33',
					confirmButtonText: 'Yes, delete it!'
				}).then((result) => {
					if (result.isConfirmed) {

						fetch(url).then(
							response => {
								if (response.status == 200) {
									x.parentElement.parentElement.parentElement.remove();

									Swal.fire(
										'Deleted!',
										'Department has been deleted.',
										'success'
									);
								}
								else {
									Swal.fire({
										icon: 'error',
										title: 'Couldn\'t delete!',
										text: 'Something went wrong!'
									})
								}
							}
						);


					}
				})

			});

		});

	</script>
}